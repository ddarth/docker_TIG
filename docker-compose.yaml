version: '3.6'
services:
  telegraf:
    build:
      context: .
      dockerfile: Dockerfile  # Указываем путь к кастомному Dockerfile    
#    image: telegraf
    container_name: telegraf
    #command: /bin/bash -c "whoami && ls -l /etc/telegraf/"
    # command: /bin/bash -c "cd cmd/telegraf && go run ./"
    restart: always
    volumes:
    - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    - /var/run/docker.sock:/var/run/docker.sock
      #- ./telegraf_cache:/etc/telegraf/.cache:rw
      #- ./telegraf_cache/go-build:/etc/telegraf/.cache/go-build
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
    - '8125:8125'
    - '57400:57400'
    #- '57401:57401'

  influxdb:
    image: influxdb:1.8-alpine
    container_name: influxdb
    restart: always
    environment:
      - INFLUXDB_DB=influx
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
        #      - INFLUXDB_HTTP_LOG_ENABLED=true
        #      - INFLUXDB_LOGGING_LEVEL=debug
    ports:
      - '8086:8086'
    volumes:
      - influxdb_data:/var/lib/influxdb
        #      - ./influxdb.conf:/etc/influxdb/influxdb.conf

  grafana:
    image: grafana/grafana
    container_name: grafana-server
    restart: always
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=
    links:
      - influxdb
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./grafana/dashboards:/etc/grafana/dashboards

  gnmic1:
    image: ghcr.io/openconfig/gnmic:latest
    container_name: gnmic1
    volumes:
      - ./gnmic1.yaml:/app/gnmic.yaml:ro
#command: "subscribe --config /app/gnmic.yaml"
#command: "listen -a 0.0.0.0:57400"
    command: "listen -a 0.0.0.0:57401 --config /app/gnmic.yaml --debug --insecure"
    # networks:
    #   - gnmic-net
    ports:
      - 9804:9804
      - 57401:57401
    # depends_on:
    #   - consul-agent 

volumes:
  grafana_data: {}
  influxdb_data: {}
